extern crate colorful;
extern crate core;

use colorful::Colorful;
use colorful::core::Color::*;
use colorful::core::ColorInterface;
use colorful::HSL;

#[test]
fn test_color() {
    let s = "Hello world";
    let all_color = [
        Black,
        Red,
        Green,
        Yellow,
        Blue,
        Magenta,
        Cyan,
        LightGray,
        DarkGray,
        LightRed,
        LightGreen,
        LightYellow,
        LightBlue,
        LightMagenta,
        LightCyan,
        White,
        Grey0,
        NavyBlue,
        DarkBlue,
        Blue3a,
        Blue3b,
        Blue1,
        DarkGreen,
        DeepSkyBlue4a,
        DeepSkyBlue4b,
        DeepSkyBlue4c,
        DodgerBlue3,
        DodgerBlue2,
        Green4,
        SpringGreen4,
        Turquoise4,
        DeepSkyBlue3a,
        DeepSkyBlue3b,
        DodgerBlue1,
        Green3a,
        SpringGreen3a,
        DarkCyan,
        LightSeaGreen,
        DeepSkyBlue2,
        DeepSkyBlue1,
        Green3b,
        SpringGreen3b,
        SpringGreen2a,
        Cyan3,
        DarkTurquoise,
        Turquoise2,
        Green1,
        SpringGreen2b,
        SpringGreen1,
        MediumSpringGreen,
        Cyan2,
        Cyan1,
        DarkRed1,
        DeepPink4a,
        Purple4a,
        Purple4b,
        Purple3,
        BlueViolet,
        Orange4a,
        Grey37,
        MediumPurple4,
        SlateBlue3a,
        SlateBlue3b,
        RoyalBlue1,
        Chartreuse4,
        DarkSeaGreen4a,
        PaleTurquoise4,
        SteelBlue,
        SteelBlue3,
        CornflowerBlue,
        Chartreuse3a,
        DarkSeaGreen4b,
        CadetBlue2,
        CadetBlue1,
        SkyBlue3,
        SteelBlue1a,
        Chartreuse3b,
        PaleGreen3a,
        SeaGreen3,
        Aquamarine3,
        MediumTurquoise,
        SteelBlue1b,
        Chartreuse2a,
        SeaGreen2,
        SeaGreen1a,
        SeaGreen1b,
        Aquamarine1a,
        DarkSlateGray2,
        DarkRed2,
        DeepPink4b,
        DarkMagenta1,
        DarkMagenta2,
        DarkViolet1a,
        Purple1a,
        Orange4b,
        LightPink4,
        Plum4,
        MediumPurple3a,
        MediumPurple3b,
        SlateBlue1,
        Yellow4a,
        Wheat4,
        Grey53,
        LightSlateGrey,
        MediumPurple,
        LightSlateBlue,
        Yellow4b,
        DarkOliveGreen3a,
        DarkGreenSea,
        LightSkyBlue3a,
        LightSkyBlue3b,
        SkyBlue2,
        Chartreuse2b,
        DarkOliveGreen3b,
        PaleGreen3b,
        DarkSeaGreen3a,
        DarkSlateGray3,
        SkyBlue1,
        Chartreuse1,
        LightGreen2,
        LightGreen3,
        PaleGreen1a,
        Aquamarine1b,
        DarkSlateGray1,
        Red3a,
        DeepPink4c,
        MediumVioletRed,
        Magenta3a,
        DarkViolet1b,
        Purple1b,
        DarkOrange3a,
        IndianRed1a,
        HotPink3a,
        MediumOrchid3,
        MediumOrchid,
        MediumPurple2a,
        DarkGoldenrod,
        LightSalmon3a,
        RosyBrown,
        Grey63,
        MediumPurple2b,
        MediumPurple1,
        Gold3a,
        DarkKhaki,
        NavajoWhite3,
        Grey69,
        LightSteelBlue3,
        LightSteelBlue,
        Yellow3a,
        DarkOliveGreen3,
        DarkSeaGreen3b,
        DarkSeaGreen2,
        LightCyan3,
        LightSkyBlue1,
        GreenYellow,
        DarkOliveGreen2,
        PaleGreen1b,
        DarkSeaGreen5b,
        DarkSeaGreen5a,
        PaleTurquoise1,
        Red3b,
        DeepPink3a,
        DeepPink3b,
        Magenta3b,
        Magenta3c,
        Magenta2a,
        DarkOrange3b,
        IndianRed1b,
        HotPink3b,
        HotPink2,
        Orchid,
        MediumOrchid1a,
        Orange3,
        LightSalmon3b,
        LightPink3,
        Pink3,
        Plum3,
        Violet,
        Gold3b,
        LightGoldenrod3,
        Tan,
        MistyRose3,
        Thistle3,
        Plum2,
        Yellow3b,
        Khaki3,
        LightGoldenrod2a,
        LightYellow3,
        Grey84,
        LightSteelBlue1,
        Yellow2,
        DarkOliveGreen1a,
        DarkOliveGreen1b,
        DarkSeaGreen1,
        Honeydew2,
        LightCyan1,
        Red1,
        DeepPink2,
        DeepPink1a,
        DeepPink1b,
        Magenta2b,
        Magenta1,
        OrangeRed1,
        IndianRed1c,
        IndianRed1d,
        HotPink1a,
        HotPink1b,
        MediumOrchid1b,
        DarkOrange,
        Salmon1,
        LightCoral,
        PaleVioletRed1,
        Orchid2,
        Orchid1,
        Orange1,
        SandyBrown,
        LightSalmon1,
        LightPink1,
        Pink1,
        Plum1,
        Gold1,
        LightGoldenrod2b,
        LightGoldenrod2c,
        NavajoWhite1,
        MistyRose1,
        Thistle1,
        Yellow1,
        LightGoldenrod1,
        Khaki1,
        Wheat1,
        CornSilk1,
        Grey100,
        Grey3,
        Grey7,
        Grey11,
        Grey15,
        Grey19,
        Grey23,
        Grey27,
        Grey30,
        Grey35,
        Grey39,
        Grey42,
        Grey46,
        Grey50,
        Grey54,
        Grey58,
        Grey62,
        Grey66,
        Grey70,
        Grey74,
        Grey78,
        Grey82,
        Grey85,
        Grey89,
        Grey93,
    ];
    for (i, color) in all_color.iter().enumerate() {
        assert_eq!(format!("\x1B[38;5;{}mHello world\x1B[0m", i.to_owned()), s.color(*color).to_string());
    }
}


#[test]
fn test_color_to_hsl() {
    let s = "Hello world";
    let all_color = [
        Black,
        Red,
        Green,
        Yellow,
        Blue,
        Magenta,
        Cyan,
        LightGray,
        DarkGray,
        LightRed,
        LightGreen,
        LightYellow,
        LightBlue,
        LightMagenta,
        LightCyan,
        White,
        Grey0,
        NavyBlue,
        DarkBlue,
        Blue3a,
        Blue3b,
        Blue1,
        DarkGreen,
        DeepSkyBlue4a,
        DeepSkyBlue4b,
        DeepSkyBlue4c,
        DodgerBlue3,
        DodgerBlue2,
        Green4,
        SpringGreen4,
        Turquoise4,
        DeepSkyBlue3a,
        DeepSkyBlue3b,
        DodgerBlue1,
        Green3a,
        SpringGreen3a,
        DarkCyan,
        LightSeaGreen,
        DeepSkyBlue2,
        DeepSkyBlue1,
        Green3b,
        SpringGreen3b,
        SpringGreen2a,
        Cyan3,
        DarkTurquoise,
        Turquoise2,
        Green1,
        SpringGreen2b,
        SpringGreen1,
        MediumSpringGreen,
        Cyan2,
        Cyan1,
        DarkRed1,
        DeepPink4a,
        Purple4a,
        Purple4b,
        Purple3,
        BlueViolet,
        Orange4a,
        Grey37,
        MediumPurple4,
        SlateBlue3a,
        SlateBlue3b,
        RoyalBlue1,
        Chartreuse4,
        DarkSeaGreen4a,
        PaleTurquoise4,
        SteelBlue,
        SteelBlue3,
        CornflowerBlue,
        Chartreuse3a,
        DarkSeaGreen4b,
        CadetBlue2,
        CadetBlue1,
        SkyBlue3,
        SteelBlue1a,
        Chartreuse3b,
        PaleGreen3a,
        SeaGreen3,
        Aquamarine3,
        MediumTurquoise,
        SteelBlue1b,
        Chartreuse2a,
        SeaGreen2,
        SeaGreen1a,
        SeaGreen1b,
        Aquamarine1a,
        DarkSlateGray2,
        DarkRed2,
        DeepPink4b,
        DarkMagenta1,
        DarkMagenta2,
        DarkViolet1a,
        Purple1a,
        Orange4b,
        LightPink4,
        Plum4,
        MediumPurple3a,
        MediumPurple3b,
        SlateBlue1,
        Yellow4a,
        Wheat4,
        Grey53,
        LightSlateGrey,
        MediumPurple,
        LightSlateBlue,
        Yellow4b,
        DarkOliveGreen3a,
        DarkGreenSea,
        LightSkyBlue3a,
        LightSkyBlue3b,
        SkyBlue2,
        Chartreuse2b,
        DarkOliveGreen3b,
        PaleGreen3b,
        DarkSeaGreen3a,
        DarkSlateGray3,
        SkyBlue1,
        Chartreuse1,
        LightGreen2,
        LightGreen3,
        PaleGreen1a,
        Aquamarine1b,
        DarkSlateGray1,
        Red3a,
        DeepPink4c,
        MediumVioletRed,
        Magenta3a,
        DarkViolet1b,
        Purple1b,
        DarkOrange3a,
        IndianRed1a,
        HotPink3a,
        MediumOrchid3,
        MediumOrchid,
        MediumPurple2a,
        DarkGoldenrod,
        LightSalmon3a,
        RosyBrown,
        Grey63,
        MediumPurple2b,
        MediumPurple1,
        Gold3a,
        DarkKhaki,
        NavajoWhite3,
        Grey69,
        LightSteelBlue3,
        LightSteelBlue,
        Yellow3a,
        DarkOliveGreen3,
        DarkSeaGreen3b,
        DarkSeaGreen2,
        LightCyan3,
        LightSkyBlue1,
        GreenYellow,
        DarkOliveGreen2,
        PaleGreen1b,
        DarkSeaGreen5b,
        DarkSeaGreen5a,
        PaleTurquoise1,
        Red3b,
        DeepPink3a,
        DeepPink3b,
        Magenta3b,
        Magenta3c,
        Magenta2a,
        DarkOrange3b,
        IndianRed1b,
        HotPink3b,
        HotPink2,
        Orchid,
        MediumOrchid1a,
        Orange3,
        LightSalmon3b,
        LightPink3,
        Pink3,
        Plum3,
        Violet,
        Gold3b,
        LightGoldenrod3,
        Tan,
        MistyRose3,
        Thistle3,
        Plum2,
        Yellow3b,
        Khaki3,
        LightGoldenrod2a,
        LightYellow3,
        Grey84,
        LightSteelBlue1,
        Yellow2,
        DarkOliveGreen1a,
        DarkOliveGreen1b,
        DarkSeaGreen1,
        Honeydew2,
        LightCyan1,
        Red1,
        DeepPink2,
        DeepPink1a,
        DeepPink1b,
        Magenta2b,
        Magenta1,
        OrangeRed1,
        IndianRed1c,
        IndianRed1d,
        HotPink1a,
        HotPink1b,
        MediumOrchid1b,
        DarkOrange,
        Salmon1,
        LightCoral,
        PaleVioletRed1,
        Orchid2,
        Orchid1,
        Orange1,
        SandyBrown,
        LightSalmon1,
        LightPink1,
        Pink1,
        Plum1,
        Gold1,
        LightGoldenrod2b,
        LightGoldenrod2c,
        NavajoWhite1,
        MistyRose1,
        Thistle1,
        Yellow1,
        LightGoldenrod1,
        Khaki1,
        Wheat1,
        CornSilk1,
        Grey100,
        Grey3,
        Grey7,
        Grey11,
        Grey15,
        Grey19,
        Grey23,
        Grey27,
        Grey30,
        Grey35,
        Grey39,
        Grey42,
        Grey46,
        Grey50,
        Grey54,
        Grey58,
        Grey62,
        Grey66,
        Grey70,
        Grey74,
        Grey78,
        Grey82,
        Grey85,
        Grey89,
        Grey93,
    ];
    let l = vec![HSL::new(0.0, 0.0, 0.0),
                 HSL::new(0.0, 100.0, 25.0),
                 HSL::new(120.0, 100.0, 25.0),
                 HSL::new(60.0, 100.0, 25.0),
                 HSL::new(240.0, 100.0, 25.0),
                 HSL::new(300.0, 100.0, 25.0),
                 HSL::new(180.0, 100.0, 25.0),
                 HSL::new(0.0, 0.0, 75.0),
                 HSL::new(0.0, 0.0, 50.0),
                 HSL::new(0.0, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 50.0),
                 HSL::new(60.0, 100.0, 50.0),
                 HSL::new(240.0, 100.0, 50.0),
                 HSL::new(300.0, 100.0, 50.0),
                 HSL::new(180.0, 100.0, 50.0),
                 HSL::new(0.0, 0.0, 100.0),
                 HSL::new(0.0, 0.0, 0.0),
                 HSL::new(240.0, 100.0, 18.0),
                 HSL::new(240.0, 100.0, 26.0),
                 HSL::new(240.0, 100.0, 34.0),
                 HSL::new(240.0, 100.0, 42.0),
                 HSL::new(240.0, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 18.0),
                 HSL::new(180.0, 100.0, 18.0),
                 HSL::new(197.777777778, 100.0, 26.0),
                 HSL::new(207.428571429, 100.0, 34.0),
                 HSL::new(213.488372093, 100.0, 42.0),
                 HSL::new(217.647058824, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 26.0),
                 HSL::new(162.222222222, 100.0, 26.0),
                 HSL::new(180.0, 100.0, 26.0),
                 HSL::new(193.714285714, 100.0, 34.0),
                 HSL::new(202.325581395, 100.0, 42.0),
                 HSL::new(208.235294118, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 34.0),
                 HSL::new(152.571428571, 100.0, 34.0),
                 HSL::new(166.285714286, 100.0, 34.0),
                 HSL::new(180.0, 100.0, 34.0),
                 HSL::new(191.162790698, 100.0, 42.0),
                 HSL::new(198.823529412, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 42.0),
                 HSL::new(146.511627907, 100.0, 42.0),
                 HSL::new(157.674418605, 100.0, 42.0),
                 HSL::new(168.837209302, 100.0, 42.0),
                 HSL::new(180.0, 100.0, 42.0),
                 HSL::new(189.411764706, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 50.0),
                 HSL::new(142.352941176, 100.0, 50.0),
                 HSL::new(151.764705882, 100.0, 50.0),
                 HSL::new(161.176470588, 100.0, 50.0),
                 HSL::new(170.588235294, 100.0, 50.0),
                 HSL::new(180.0, 100.0, 50.0),
                 HSL::new(0.0, 100.0, 18.0),
                 HSL::new(300.0, 100.0, 18.0),
                 HSL::new(282.222222222, 100.0, 26.0),
                 HSL::new(272.571428571, 100.0, 34.0),
                 HSL::new(266.511627907, 100.0, 42.0),
                 HSL::new(262.352941176, 100.0, 50.0),
                 HSL::new(60.0, 100.0, 18.0),
                 HSL::new(0.0, 0.0, 37.0),
                 HSL::new(240.0, 17.0, 45.0),
                 HSL::new(240.0, 33.0, 52.0),
                 HSL::new(240.0, 60.0, 60.0),
                 HSL::new(240.0, 100.0, 68.0),
                 HSL::new(77.7777777778, 100.0, 26.0),
                 HSL::new(120.0, 17.0, 45.0),
                 HSL::new(180.0, 17.0, 45.0),
                 HSL::new(210.0, 33.0, 52.0),
                 HSL::new(220.0, 60.0, 60.0),
                 HSL::new(225.0, 100.0, 68.0),
                 HSL::new(87.4285714286, 100.0, 34.0),
                 HSL::new(120.0, 33.0, 52.0),
                 HSL::new(150.0, 33.0, 52.0),
                 HSL::new(180.0, 33.0, 52.0),
                 HSL::new(200.0, 60.0, 60.0),
                 HSL::new(210.0, 100.0, 68.0),
                 HSL::new(93.488372093, 100.0, 42.0),
                 HSL::new(120.0, 60.0, 60.0),
                 HSL::new(140.0, 60.0, 60.0),
                 HSL::new(160.0, 60.0, 60.0),
                 HSL::new(180.0, 60.0, 60.0),
                 HSL::new(195.0, 100.0, 68.0),
                 HSL::new(97.6470588235, 100.0, 50.0),
                 HSL::new(120.0, 100.0, 68.0),
                 HSL::new(135.0, 100.0, 68.0),
                 HSL::new(150.0, 100.0, 68.0),
                 HSL::new(165.0, 100.0, 68.0),
                 HSL::new(180.0, 100.0, 68.0),
                 HSL::new(0.0, 100.0, 26.0),
                 HSL::new(317.777777778, 100.0, 26.0),
                 HSL::new(300.0, 100.0, 26.0),
                 HSL::new(286.285714286, 100.0, 34.0),
                 HSL::new(277.674418605, 100.0, 42.0),
                 HSL::new(271.764705882, 100.0, 50.0),
                 HSL::new(42.2222222222, 100.0, 26.0),
                 HSL::new(0.0, 17.0, 45.0),
                 HSL::new(300.0, 17.0, 45.0),
                 HSL::new(270.0, 33.0, 52.0),
                 HSL::new(260.0, 60.0, 60.0),
                 HSL::new(255.0, 100.0, 68.0),
                 HSL::new(60.0, 100.0, 26.0),
                 HSL::new(60.0, 17.0, 45.0),
                 HSL::new(0.0, 0.0, 52.0),
                 HSL::new(240.0, 20.0, 60.0),
                 HSL::new(240.0, 50.0, 68.0),
                 HSL::new(240.0, 100.0, 76.0),
                 HSL::new(73.7142857143, 100.0, 34.0),
                 HSL::new(90.0, 33.0, 52.0),
                 HSL::new(120.0, 20.0, 60.0),
                 HSL::new(180.0, 20.0, 60.0),
                 HSL::new(210.0, 50.0, 68.0),
                 HSL::new(220.0, 100.0, 76.0),
                 HSL::new(82.3255813953, 100.0, 42.0),
                 HSL::new(100.0, 60.0, 60.0),
                 HSL::new(120.0, 50.0, 68.0),
                 HSL::new(150.0, 50.0, 68.0),
                 HSL::new(180.0, 50.0, 68.0),
                 HSL::new(200.0, 100.0, 76.0),
                 HSL::new(88.2352941176, 100.0, 50.0),
                 HSL::new(105.0, 100.0, 68.0),
                 HSL::new(120.0, 100.0, 76.0),
                 HSL::new(140.0, 100.0, 76.0),
                 HSL::new(160.0, 100.0, 76.0),
                 HSL::new(180.0, 100.0, 76.0),
                 HSL::new(0.0, 100.0, 34.0),
                 HSL::new(327.428571429, 100.0, 34.0),
                 HSL::new(313.714285714, 100.0, 34.0),
                 HSL::new(300.0, 100.0, 34.0),
                 HSL::new(288.837209302, 100.0, 42.0),
                 HSL::new(281.176470588, 100.0, 50.0),
                 HSL::new(32.5714285714, 100.0, 34.0),
                 HSL::new(0.0, 33.0, 52.0),
                 HSL::new(330.0, 33.0, 52.0),
                 HSL::new(300.0, 33.0, 52.0),
                 HSL::new(280.0, 60.0, 60.0),
                 HSL::new(270.0, 100.0, 68.0),
                 HSL::new(46.2857142857, 100.0, 34.0),
                 HSL::new(30.0, 33.0, 52.0),
                 HSL::new(0.0, 20.0, 60.0),
                 HSL::new(300.0, 20.0, 60.0),
                 HSL::new(270.0, 50.0, 68.0),
                 HSL::new(260.0, 100.0, 76.0),
                 HSL::new(60.0, 100.0, 34.0),
                 HSL::new(60.0, 33.0, 52.0),
                 HSL::new(60.0, 20.0, 60.0),
                 HSL::new(0.0, 0.0, 68.0),
                 HSL::new(240.0, 33.0, 76.0),
                 HSL::new(240.0, 100.0, 84.0),
                 HSL::new(71.1627906977, 100.0, 42.0),
                 HSL::new(80.0, 60.0, 60.0),
                 HSL::new(90.0, 50.0, 68.0),
                 HSL::new(120.0, 33.0, 76.0),
                 HSL::new(180.0, 33.0, 76.0),
                 HSL::new(210.0, 100.0, 84.0),
                 HSL::new(78.8235294118, 100.0, 50.0),
                 HSL::new(90.0, 100.0, 68.0),
                 HSL::new(100.0, 100.0, 76.0),
                 HSL::new(120.0, 100.0, 84.0),
                 HSL::new(150.0, 100.0, 84.0),
                 HSL::new(180.0, 100.0, 84.0),
                 HSL::new(0.0, 100.0, 42.0),
                 HSL::new(333.488372093, 100.0, 42.0),
                 HSL::new(322.325581395, 100.0, 42.0),
                 HSL::new(311.162790698, 100.0, 42.0),
                 HSL::new(300.0, 100.0, 42.0),
                 HSL::new(290.588235294, 100.0, 50.0),
                 HSL::new(26.511627907, 100.0, 42.0),
                 HSL::new(0.0, 60.0, 60.0),
                 HSL::new(340.0, 60.0, 60.0),
                 HSL::new(320.0, 60.0, 60.0),
                 HSL::new(300.0, 60.0, 60.0),
                 HSL::new(285.0, 100.0, 68.0),
                 HSL::new(37.6744186047, 100.0, 42.0),
                 HSL::new(20.0, 60.0, 60.0),
                 HSL::new(0.0, 50.0, 68.0),
                 HSL::new(330.0, 50.0, 68.0),
                 HSL::new(300.0, 50.0, 68.0),
                 HSL::new(280.0, 100.0, 76.0),
                 HSL::new(48.8372093023, 100.0, 42.0),
                 HSL::new(40.0, 60.0, 60.0),
                 HSL::new(30.0, 50.0, 68.0),
                 HSL::new(0.0, 33.0, 76.0),
                 HSL::new(300.0, 33.0, 76.0),
                 HSL::new(270.0, 100.0, 84.0),
                 HSL::new(60.0, 100.0, 42.0),
                 HSL::new(60.0, 60.0, 60.0),
                 HSL::new(60.0, 50.0, 68.0),
                 HSL::new(60.0, 33.0, 76.0),
                 HSL::new(0.0, 0.0, 84.0),
                 HSL::new(240.0, 100.0, 92.0),
                 HSL::new(69.4117647059, 100.0, 50.0),
                 HSL::new(75.0, 100.0, 68.0),
                 HSL::new(80.0, 100.0, 76.0),
                 HSL::new(90.0, 100.0, 84.0),
                 HSL::new(120.0, 100.0, 92.0),
                 HSL::new(180.0, 100.0, 92.0),
                 HSL::new(0.0, 100.0, 50.0),
                 HSL::new(337.647058824, 100.0, 50.0),
                 HSL::new(328.235294118, 100.0, 50.0),
                 HSL::new(318.823529412, 100.0, 50.0),
                 HSL::new(309.411764706, 100.0, 50.0),
                 HSL::new(300.0, 100.0, 50.0),
                 HSL::new(22.3529411765, 100.0, 50.0),
                 HSL::new(0.0, 100.0, 68.0),
                 HSL::new(345.0, 100.0, 68.0),
                 HSL::new(330.0, 100.0, 68.0),
                 HSL::new(315.0, 100.0, 68.0),
                 HSL::new(300.0, 100.0, 68.0),
                 HSL::new(31.7647058824, 100.0, 50.0),
                 HSL::new(15.0, 100.0, 68.0),
                 HSL::new(0.0, 100.0, 76.0),
                 HSL::new(340.0, 100.0, 76.0),
                 HSL::new(320.0, 100.0, 76.0),
                 HSL::new(300.0, 100.0, 76.0),
                 HSL::new(41.1764705882, 100.0, 50.0),
                 HSL::new(30.0, 100.0, 68.0),
                 HSL::new(20.0, 100.0, 76.0),
                 HSL::new(0.0, 100.0, 84.0),
                 HSL::new(330.0, 100.0, 84.0),
                 HSL::new(300.0, 100.0, 84.0),
                 HSL::new(50.5882352941, 100.0, 50.0),
                 HSL::new(45.0, 100.0, 68.0),
                 HSL::new(40.0, 100.0, 76.0),
                 HSL::new(30.0, 100.0, 84.0),
                 HSL::new(0.0, 100.0, 92.0),
                 HSL::new(300.0, 100.0, 92.0),
                 HSL::new(60.0, 100.0, 50.0),
                 HSL::new(60.0, 100.0, 68.0),
                 HSL::new(60.0, 100.0, 76.0),
                 HSL::new(60.0, 100.0, 84.0),
                 HSL::new(60.0, 100.0, 92.0),
                 HSL::new(0.0, 0.0, 100.0),
                 HSL::new(0.0, 0.0, 3.0),
                 HSL::new(0.0, 0.0, 7.0),
                 HSL::new(0.0, 0.0, 10.0),
                 HSL::new(0.0, 0.0, 14.0),
                 HSL::new(0.0, 0.0, 18.0),
                 HSL::new(0.0, 0.0, 22.0),
                 HSL::new(0.0, 0.0, 26.0),
                 HSL::new(0.0, 0.0, 30.0),
                 HSL::new(0.0, 0.0, 34.0),
                 HSL::new(0.0, 0.0, 37.0),
                 HSL::new(0.0, 0.0, 40.0),
                 HSL::new(0.0, 0.0, 46.0),
                 HSL::new(0.0, 0.0, 50.0),
                 HSL::new(0.0, 0.0, 54.0),
                 HSL::new(0.0, 0.0, 58.0),
                 HSL::new(0.0, 0.0, 61.0),
                 HSL::new(0.0, 0.0, 65.0),
                 HSL::new(0.0, 0.0, 69.0),
                 HSL::new(0.0, 0.0, 73.0),
                 HSL::new(0.0, 0.0, 77.0),
                 HSL::new(0.0, 0.0, 81.0),
                 HSL::new(0.0, 0.0, 85.0),
                 HSL::new(0.0, 0.0, 89.0),
                 HSL::new(0.0, 0.0, 93.0)];
    for (i, color) in all_color.iter().enumerate() {
        assert_eq!(color.to_hsl(), l[i]);
    }
}